{"version":3,"sources":["components/homepage.js","components/about.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","About","Project","props","state","activeTab","this","onChange","tabId","setState","ripple","toggleCategories","Resume","Main","exact","path","component","Projects","App","transparent","title","color","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b4038d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Homepage extends Component {\n  render(){\n    return(\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://doggiedesigner.com/wp-content/uploads/2018/04/73.1-1.jpg\"\n              alt=\"avatar\"\n              className=\"avatar-img\"\n            />\n            <div className=\"banner-text\">\n              <h1>Xinyue Chen</h1>\n              <hr/>\n              <p>Software Engineering Student @McGill\n              </p>\n              <div className=\"social-links\">\n                {/* Facebook */}\n                <a href=\"https://www.facebook.com/profile.php?id=100014845443602&ref=bookmarks\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\n                </a>\n                {/* Github */}\n                <a href=\"https://github.com/fork1028\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                </a>\n                {/* Linkedin */}\n                <a href=\"https://www.linkedin.com/in/xinyue-chen-45b6b2175/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                </a>\n                {/* Instagram */}\n                <a href=\"https://www.instagram.com/fork1028/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n                </a>\n              </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Homepage;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render(){\n    return(\n      <div><h1>About page</h1></div>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Tab, Tabs, Grid, Cell } from 'react-mdl';\n\nclass Project extends Component {\n  constructor(props){\n    super(props);\n    this.state = { activeTab: 0 };\n  }\n\n  toggleCategories(){\n    if(this.state.activeTab===0){\n      return(\n        <div><h1>this is project1</h1></div>\n      )\n    }\n    else if(this.state.activeTab===1){\n      return(\n        <div><h1>this is project2</h1></div>\n      )\n    }\n    else if(this.state.activeTab===2){\n      return(\n        <div><h1>this is project3</h1></div>\n      )\n    }\n    else if(this.state.activeTab===3){\n      return(\n        <div><h1>this is project4</h1></div>\n      )\n    }\n  }\n\n\n  render(){\n    return(\n      <div className=\"category-tabs\">\n        <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab: tabId})} ripple>\n          <Tab>Quoridor</Tab>\n          <Tab>Nanos Search</Tab>\n          <Tab>My Pet Simulation Game</Tab>\n          <Tab>LeJOS Robot Project</Tab>\n        </Tabs>\n        <section className=\"projects-grid\">\n          <Grid className=\"projects-grid\">\n            <Cell col={12}>\n              <div className=\"content\">{this.toggleCategories()}</div>\n            </Cell>\n          </Grid>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n  render(){\n    return(\n      <div><h1>Resume page</h1></div>\n    )\n  }\n}\n\nexport default Resume;\n","import React from 'react';\nimport Homepage from './homepage';\nimport About from './about';\nimport Projects from './projects';\nimport Resume from './resume';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Homepage} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/projects\" component={Projects} />\n    <Route path=\"/resume\" component={Resume} />\n  </Switch>\n)\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render(){\n  return (\n    <div>\n    <Layout>\n        <Header className=\"header-color\" transparent title=\"Personal Website\" style={{color: 'white'}}>\n            <Navigation>\n                <Link to=\"/\">Homepage</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/about\">About</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/\">Homepage</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/about\">About</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n          <Main/>\n        </Content>\n    </Layout>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}